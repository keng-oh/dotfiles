# ------------------------------
# Prompt settings
# ------------------------------


# colorful
autoload -Uz colors
colors

# vcs_info for git info
autoload -Uz vcs_info
setopt prompt_subst

# last command status
OK="O"; NG="X"
export CMD_STATUS="[%(?.%F{cyan}$OK%f.%F{red}$NG%f)]"

# const
export user_name="%n"
export host_name="%m"
export device_name="%y"
export current_dir="%~"
export current_dir_fullpath="%d"
export current_dir_name="%C"
export user_identifier="%#"
export hh_mm="%T"
export yy_mm_military="%t"
export date_hyphen="%W"
export date_slash="%w"
export hh_mm_ss="%*"
export yy_mm_dd="%D"
export lambda="λ"
export reset_color="%{${reset_color}%}"

## colored const
export c_host_name="%{${fg[cyan]}%}${host_name}${reset_color}"
export c_user_name="%{${fg[yellow]}%}${user_name}${reset_color}"
export c_current_dir="%{${fg[green]}%}${current_dir}${reset_color}"
export c_current_dir_fullpath="%{${fg[green]}%}${current_dir_fullpath}${reset_color}"
export c_user_identifier="%{${fg[red]}%}${user_identifier}${reset_color}"
export c_at_sign="%{${fg[white]}%}@%{${reset_color}%}"
export c_lambda="%{${fg[cyan]}%}${lambda}%{${reset_color}%}"

# git info
zstyle ':vcs_info:git:*' check-for-changes true #formats 設定項目で %c,%u が使用可
zstyle ':vcs_info:git:*' stagedstr "%F{green}!" #commit されていないファイルがある
zstyle ':vcs_info:git:*' unstagedstr "%F{magenta}+" #add されていないファイルがある
zstyle ':vcs_info:*' formats "%F{cyan}%c%u(%b)%f" #通常
zstyle ':vcs_info:*' actionformats '[%b|%a]' #rebase 途中,merge コンフリクト等 formats 外の表示

precmd () { vcs_info }

export tmp_prompt='[${c_user_name}${c_at_sign}${c_host_name} ${c_current_dir}][${hh_mm_ss}]${vcs_info_msg_0_}${CMD_STATUS}${VIMODE}[${c_user_identifier}][${c_lambda}]> '
export tmp_prompt2="%{${fg[cyan]}%}%_> %{${reset_color}%}"
export tmp_rprompt="[${c_current_dir_fullpath}]"
export tmp_sprompt="%{${fg[yellow]}%}%r is correct? [Yes, No, Abort, Edit]:%{${reset_color}%}"

export PROMPT=$tmp_prompt    # 通常のプロンプト
export PROMPT2=$tmp_prompt2  # セカンダリのプロンプト(コマンドが2行以上の時に表示される)
# export RPROMPT=$tmp_rprompt  # 右側のプロンプト
export SPROMPT=$tmp_sprompt  # スペル訂正用プロンプト

# Not store failed command
zshaddhistory() { whence ${${(z)1}[1]} >| /dev/null || return 1 }

# zshのコマンド実行時に、プロンプトの時刻を更新する
re-prompt() {
    zle .reset-prompt
    zle .accept-line
}

zle -N accept-line re-prompt